openapi: 3.0.0
info:
  title: Opdrachtenbox API
  description: API voor het beheren van opdrachten voor studenten van de opleiding CMD
  version: 0.0.3

servers:
  - url: http://localhost:8080/
    description: Local development server

tags:
  - name: Aanmeldingen
    description: Alles wat met aanmeldingen op projecten te maken heeft
  - name: Authenticatie
    description: Alles wat met authenticatie te maken heeft
  - name: Bedrijven
    description: Alles wat met bedrijven te maken heeft
  - name: Projecten
    description: Alles wat met projecten te maken heeft
  - name: Skills
    description: Alles wat met skills te maken heeft
  - name: Studenten
    description: Alles wat met studenten te maken heeft
  - name: Taken
    description: Alles wat met taken te maken heeft
  - name: Uitnodigingen
    description: Alles wat met uitnodigingen te maken heeft

paths:
  /registrations:
    patch:
      tags:
        - Aanmeldingen
      summary: voor het accepteren of afwijzen van een aanmelding
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                taskId:
                  type: integer
                  format: int32
                  example: 12
                userId:
                  type: integer
                  format: int32
                  example: 312
                accepted:
                  type: boolean
                  example: true
                response:
                  type: string
                  maxLength: 400
                  example: Welkom bij het project
              required:
                - accepted
      description: "Alleen toegankelijk voor: de opdrachtgever zelf"
      security:
        - sessionCookieAuth: []
      responses:
        "200":
          description: aanmelding succesvol geaccepteerd of afgewezen
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/UnAuthenticated"
        "403":
          description: gebruiker heeft niet de opdrachtgever rol
        "404":
          description: id is niet gevonden
        "5XX":
          $ref: "#/components/responses/ServerError"

  /registrations/existing-user-registrations:
    get:
      tags:
        - Aanmeldingen
      summary: ophalen van alle taskIds waar de student zich voor heeft aangemeld
      description: "Alleen toegankelijk voor: student"
      security:
        - sessionCookieAuth: []
      responses:
        "200":
          description: aanmeldingen succesvol opgehaald
          content:
            application/json:
              schema:
                type: array
                items:
                  type: integer
                  format: int32
                  example: 12
        "401":
          $ref: "#/components/responses/UnAuthenticated"
        "403":
          description: gebruiker heeft niet de student rol
        "5XX":
          $ref: "#/components/responses/ServerError"

  /registrations/{taskId}:
    get:
      tags:
        - Aanmeldingen
      summary: ophalen van alle aanmeldingen voor de opdrachtgever die is ingelogd
      description: "Alleen toegankelijk voor: opdrachtgever"
      security:
        - sessionCookieAuth: []
      parameters:
        - name: taskId
          in: path
          required: true
          description: de id van het project
          schema:
            type: integer
            format: int32
      responses:
        "200":
          description: aanmeldingen succesvol opgehaald
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/GetRegistrationDto"
        "401":
          $ref: "#/components/responses/UnAuthenticated"
        "403":
          description: gebruiker heeft niet de opdrachtgever rol
        "5XX":
          $ref: "#/components/responses/ServerError"
    post:
      tags:
        - Aanmeldingen
      summary: nieuwe aanmelding toevoegen
      parameters:
        - name: taskId
          in: path
          required: true
          description: de id van de task waar een aanmelding naar gedaan wordt
          schema:
            type: integer
            format: int32
      requestBody:
        content:
          application/text:
            schema:
              type: string
              example: ik ben goed in adobe premiere pro
              maxLength: 400
      security:
        - sessionCookieAuth: []
      responses:
        "200":
          description: aanmelding succesvol toegevoegd
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/UnAuthenticated"
        "403":
          description: gebruiker heeft niet de student rol
        "404":
          description: taskId is niet gevonden
        "5XX":
          $ref: "#/components/responses/ServerError"

  /verify:
    get:
      tags:
        - Authenticatie
      summary: checkt authorization
      description: "Toegankelijk voor: iedereen"
      responses:
        "200":
          description: gebruiker is ingelogd
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/VerificationDto"
              examples:
                loggedOut:
                  value:
                    type: none
                    userId: null
                    businessId: null
                student:
                  value:
                    type: student
                    userId: 312
                    businessId: null
                supervisor:
                  value:
                    type: supervisor
                    userId: 312
                    businessId: 12
        "5XX":
          $ref: "#/components/responses/ServerError"
  /set-email:
    patch:
      tags:
        - Authenticatie
      summary: checkt authorization
      description: "Toegankelijk voor: gebruikers zonder e-mailadres"
      security:
        - sessionCookieAuth: []
      requestBody:
        content:
          application/json:
            schema:
              type: string
              example: email@email.com
      responses:
        "200":
          description: Email succesvol toegevoegd aan gebruiker
        "5XX":
          $ref: "#/components/responses/ServerError"

  /logout:
    post:
      tags:
        - Authenticatie
      summary: uitloggen
      description: |
        Deze endpoint wordt afgehandeld door OAuth

        Alleen toegankelijk voor: ingelogde gebruiker
      security:
        - sessionCookieAuth: []
      responses:
        "204":
          description: uitloggen successful
          headers:
            Set-Cookie:
              schema:
                type: string
              description: cookie header verwijderen
        "5XX":
          description: server fout

  /business:
    put:
      tags:
        - Bedrijven
      summary: updaten van bedrijf
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: "#/components/schemas/BusinessDto"
      description: "Alleen toegankelijk voor: opdrachtgevers van het bedrijf"
      security:
        - sessionCookieAuth: []
      responses:
        "200":
          description: bedrijf successful aangepast
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/UnAuthenticated"
        "403":
          description: gebruiker is niet geauthoriseerd om de pagina van bedrijf aan te passen
        "404":
          description: id is niet gevonden
        "5XX":
          $ref: "#/components/responses/ServerError"

  /business/{businessId}:
    get:
      tags:
        - Bedrijven
      parameters:
        - name: businessId
          in: path
          required: true
          description: id van het bedrijf
          schema:
            type: integer
            format: int32
      description: "Alleen toegankelijk voor: ingelogde gebruiker"
      security:
        - sessionCookieAuth: []
      responses:
        "200":
          description: bedrijf successful opgehaald
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BusinessDto"
        "401":
          $ref: "#/components/responses/UnAuthenticated"
        "403":
          description: gebruiker heeft niet de ingelogde gebruiker rol
        "404":
          description: id is niet gevonden
        "5XX":
          $ref: "#/components/responses/ServerError"

  /projects:
    get:
      tags:
        - Projecten
      summary: alle projecten ophalen
      description: "Alleen toegankelijk voor: ingelogde gebruiker"
      security:
        - sessionCookieAuth: []
      parameters:
        - in: query
          name: businessId
          schema:
            type: integer
            format: int32
          required: false
      responses:
        "200":
          description: projecten succesvol opgehaald
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/GetProjectDto"
        "401":
          $ref: "#/components/responses/UnAuthenticated"
        "403":
          description: gebruiker heeft niet de ingelogde gebruiker rol
        "5XX":
          $ref: "#/components/responses/ServerError"
    post:
      tags:
        - Projecten
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                title:
                  type: string
                  maxLength: 50
                  example: Nieuwe project titel
                description:
                  type: string
                  maxLength: 400
                  example: Nieuwe project beschrijving
                image:
                  type: string
                  format: binary
                  description: afbeelding van het project
      summary: nieuw project aanmaken
      description: "Alleen toegankelijk voor: opdrachtgever"
      security:
        - sessionCookieAuth: []
      responses:
        "200":
          description: project succesvol aangemaakt
          content:
            application/json:
              schema:
                type: integer
                format: int32
                example: 25
                description: Het id van het aangemaakte project
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/UnAuthenticated"
        "403":
          description: gebruiker heeft niet de opdrachtgever rol
        "5XX":
          $ref: "#/components/responses/ServerError"

  /projects/all:
    get:
      tags:
        - Projecten
      summary: ophalen van alle projecten
      description: "Toegankelijk voor: ingelogde gebruiker"
      security:
        - sessionCookieAuth: []
      responses:
        "200":
          description: projecten succesvol opgehaald
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/BusinessProjectsWithTasksAndSkillsDto"
        "401":
          $ref: "#/components/responses/UnAuthenticated"
        "403":
          description: gebruiker heeft niet de docenten rol
        "5XX":
          $ref: "#/components/responses/ServerError"

  /projects/{projectId}:
    get:
      tags:
        - Projecten
      summary: Een enkel project ophalen
      parameters:
        - name: projectId
          in: path
          required: true
          description: de id van het project
          schema:
            type: integer
            format: int32
      description: "Alleen toegankelijk voor: ingelogde gebruiker"
      security:
        - sessionCookieAuth: []
      responses:
        "200":
          description: Project succesvol opgehaald
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetProjectDto"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/UnAuthenticated"
        "403":
          description: gebruiker heeft niet de ingelogde gebruiker rol
        "404":
          description: project heeft een foute opbouw
        "5XX":
          $ref: "#/components/responses/ServerError"

  /skills:
    get:
      tags:
        - Skills
      summary: ophalen van alle skills
      description: "Alleen toegankelijk voor: ingelogde gebruiker"
      security:
        - sessionCookieAuth: []
      responses:
        "200":
          description: skills succesvol opgehaald
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/GetSkillDto"
        "401":
          $ref: "#/components/responses/UnAuthenticated"
        "403":
          description: gebruiker heeft niet de ingelogde gebruiker rol
        "5XX":
          $ref: "#/components/responses/ServerError"
    post:
      tags:
        - Skills
      summary: nieuwe skill toevoegen
      description: "Alleen toegankelijk voor: opdrachtgever"
      security:
        - sessionCookieAuth: []
      requestBody:
        content:
          application/text:
            schema:
              type: string
              maxLength: 50
              example: adobe premiere pro
      responses:
        "201":
          description: skill succesvol toegevoegd
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetSkillDto"
        "400":
          description: skill heeft een foute opbouw, of bestaat al
        "401":
          description: gebruiker is niet ingelogd
        "403":
          description: gebruiker heeft niet de opdrachtgever rol
        "5XX":
          description: server error

  /skills/{skillId}/acceptance:
    patch:
      tags:
        - Skills
      summary: Nieuwe skills accepteren of afwijzen
      description: "Alleen toegankelijk voor: docenten"
      security:
        - sessionCookieAuth: []
      parameters:
        - name: skillId
          in: path
          required: true
          description: de id van de skill
          schema:
            type: integer
            format: int32
      requestBody:
        content:
          application/json:
            schema:
              type: boolean
              example: true
      responses:
        "200":
          description: Skill succesvol geaccepteerd of afgewezen
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/UnAuthenticated"
        "403":
          description: gebruiker heeft niet de docenten rol
        "404":
          description: skillId is niet gevonden
        "5XX":
          $ref: "#/components/responses/ServerError"

  /skills/{skillId}/name:
    patch:
      tags:
        - Skills
      summary: skill naam aanpassen
      description: "Alleen toegankelijk voor: opdrachtgever"
      security:
        - sessionCookieAuth: []
      parameters:
        - name: skillId
          in: path
          required: true
          description: de id van de skill
          schema:
            type: integer
            format: int32
      requestBody:
        content:
          application/text:
            schema:
              type: string
              maxLength: 50
              example: adobe premiere pro
      responses:
        "200":
          description: skill naam succesvol aangepast
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/UnAuthenticated"
        "403":
          description: gebruiker heeft niet de opdrachtgever rol
        "404":
          description: skillId is niet gevonden
        "5XX":
          $ref: "#/components/responses/ServerError"

  /students:
    put:
      tags:
        - Studenten
      summary: updaten van student
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: "#/components/schemas/UpdateStudentDto"
      description: "Alleen toegankelijk voor: de student zelf"
      security:
        - sessionCookieAuth: []
      responses:
        "200":
          description: student successful aangepast
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/UnAuthenticated"
        "403":
          description: gebruiker is niet geauthoriseerd om de pagina van de student aan te passen
        "404":
          description: id is niet gevonden
        "5XX":
          $ref: "#/components/responses/ServerError"

  /students/email:
    get:
      tags:
        - Studenten
      summary: ophalen van emails van studenten
      parameters:
        - name: selection
          in: query
          required: true
          description: de selectie van studenten
          schema:
            type: integer
            format: int32
        - name: taskId
          in: query
          required: true
          description: de id van de taak
          schema:
            type: integer
            format: int32
      security:
        - sessionCookieAuth: []
      responses:
        "200":
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
                  example: email@email.com
                  description: email adres van student
          description: de email adressen van studenten zijn opgehaald
        "5XX":
          $ref: "#/components/responses/ServerError"

  /students/skill:
    put:
      tags:
        - Studenten
      summary: skill omschrijving van een student aanpassen
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GetSkillWithDescriptionDto"
      description: "Alleen toegankelijk voor: de student zelf"
      security:
        - sessionCookieAuth: []
      responses:
        "200":
          description: skill succesvol aangepast
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/UnAuthenticated"
        "403":
          description: gebruiker heeft niet de student rol
        "404":
          description: id is niet gevonden
        "5XX":
          $ref: "#/components/responses/ServerError"

  /students/skills:
    put:
      tags:
        - Studenten
      summary: skills van een student aanpassen
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/IntArray"
      description: "Alleen toegankelijk voor: de student zelf"
      security:
        - sessionCookieAuth: []
      responses:
        "200":
          description: skills succesvol aangepast
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/UnAuthenticated"
        "403":
          description: gebruiker heeft niet de student rol
        "404":
          description: id is niet gevonden
        "5XX":
          $ref: "#/components/responses/ServerError"

  /students/{studentId}:
    get:
      tags:
        - Studenten
      summary: studenten ophalen
      parameters:
        - name: studentId
          in: path
          required: true
          description: id van het student
          schema:
            type: integer
            format: int32
      description: "Alleen toegankelijk voor: ingelogde gebruiker"
      security:
        - sessionCookieAuth: []
      responses:
        "200":
          description: student successful opgehaald
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/StudentDto"
        "401":
          $ref: "#/components/responses/UnAuthenticated"
        "403":
          description: gebruiker heeft niet de ingelogde gebruiker rol
        "404":
          description: id is niet gevonden
        "5XX":
          $ref: "#/components/responses/ServerError"

  /tasks/{projectId}:
    get:
      tags:
        - Taken
      summary: ophalen van alle Taken van een project
      description: "Alleen toegankelijk voor: ingelogde gebruiker"
      parameters:
        - name: projectId
          in: path
          required: true
          description: de id van het project
          schema:
            type: integer
            format: int32
      security:
        - sessionCookieAuth: []
      responses:
        "200":
          description: rollen/klussen succesvol opgehaald
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/TaskWithSkills"
        "401":
          $ref: "#/components/responses/UnAuthenticated"
        "403":
          description: gebruiker heeft niet de ingelogde gebruiker rol
        "404":
          description: project is niet gevonden
        "5XX":
          $ref: "#/components/responses/ServerError"
    post:
      tags:
        - Taken
      summary: nieuwe taak toevoegen aan een project
      parameters:
        - name: projectId
          in: path
          required: true
          description: de id van het project
          schema:
            type: integer
            format: int32
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/TaskDto"
      description: "Alleen toegankelijk voor: opdrachtgever"
      security:
        - sessionCookieAuth: []
      responses:
        "200":
          description: taak succesvol toegevoegd
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/UnAuthenticated"
        "403":
          description: gebruiker heeft niet de opdrachtgever rol
        "404":
          description: project is niet gevonden
        "5XX":
          $ref: "#/components/responses/ServerError"

  /tasks/{taskId}/skills:
    put:
      tags:
        - Taken
      summary: skills van een Taken aanpassen
      parameters:
        - name: taskId
          in: path
          required: true
          description: de id van de taak
          schema:
            type: integer
            format: int32
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/IntArray"
      description: "Alleen toegankelijk voor: opdrachtgever van het project"
      security:
        - sessionCookieAuth: []
      responses:
        "200":
          description: skills succesvol aangepast
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/UnAuthenticated"
        "403":
          description: gebruiker heeft niet de opdrachtgever rol
        "404":
          description: project is niet gevonden
        "5XX":
          $ref: "#/components/responses/ServerError"

  /invite:
    get:
      tags:
        - Uitnodigingen
      summary: Voor het opslaan van de registratie code in een cookie om later uit te kunnen lezen tijdens het registreren
      parameters:
        - name: code
          in: query
          required: true
          description: de code die de opdrachtgever heeft ontvangen
          schema:
            type: string
      description: "Alleen toegankelijk voor: de opdrachtgevers en docenten"
      security:
        - sessionCookieAuth: []
      responses:
        "200":
          description: code opgeslagen in een cookie
        "5XX":
          $ref: "#/components/responses/ServerError"

    post:
      tags:
        - Uitnodigingen
      summary: Voor het maken van een link om een opdrachtgever toe te voegen
      requestBody:
        content:
          application/json:
            schema:
              type: integer
              description: de businessId van het bedrijf
              format: int32
              example: 12
      description: "Alleen toegankelijk voor: de opdrachtgever van een bedrijf en docenten"
      security:
        - sessionCookieAuth: []
      responses:
        "200":
          description: Link aangemaakt
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LinkDto"
        "404":
          description: bedrijf is niet gevonden

components:
  securitySchemes:
    sessionCookieAuth:
      type: apiKey
      in: cookie
      name: sessionToken

  responses:
    BadRequest:
      description: request body heeft een foute opbouw
    UnAuthenticated:
      description: gebruiker is niet ingelogd
    ServerError:
      description: server fout

  schemas:
    GetProjectDto:
      type: object
      properties:
        id:
          type: integer
          format: int32
          example: 25
        title:
          type: string
          maxLength: 50
          example: Project titel
        description:
          type: string
          maxLength: 400
          example: Project beschrijving
        projectTopSkills:
          type: array
          items:
            $ref: "#/components/schemas/GetSkillDto"
        business:
          $ref: "#/components/schemas/BusinessDto"
        photo:
          $ref: "#/components/schemas/FileDto"
      required:
        - projectId
        - title
        - description
        - business
        - projectTopSkills

    BusinessProjectsWithTasksAndSkillsDto:
      type: object
      properties:
        business:
          $ref: "#/components/schemas/BusinessDto"
        projects:
          type: array
          items:
            $ref: "#/components/schemas/ProjectWithTasksAndSkillsDto"
        skills:
          type: array
          items:
            $ref: "#/components/schemas/GetSkillDto"

    ProjectWithTasksAndSkillsDto:
      type: object
      properties:
        projectId:
          type: integer
          format: int32
          example: 25
        title:
          type: string
          maxLength: 50
          example: Project titel
        description:
          type: string
          maxLength: 400
          example: Project beschrijving
        image:
          $ref: "#/components/schemas/FileDto"
        tasks:
          type: array
          items:
            $ref: "#/components/schemas/TaskWithSkills"

    TaskWithSkills:
      type: object
      properties:
        taskId:
          type: integer
          format: int32
          example: 12
        title:
          type: string
          maxLength: 50
          example: Taak titel
        description:
          type: string
          maxLength: 400
          example: Taak beschrijving
        totalNeeded:
          type: integer
          format: int32
          example: 3
        totalAccepted:
          type: integer
          format: int32
          example: 1
        totalRegistered:
          type: integer
          format: int32
          example: 2
        skills:
          type: array
          items:
            $ref: "#/components/schemas/GetSkillDto"

    GetSkillWithDescriptionDto:
      type: object
      properties:
        skill:
          $ref: "#/components/schemas/GetSkillDto"
        description:
          type: string
          maxLength: 400
          example: ik ben goed in adobe premiere pro
      required:
        - skill
        - description

    TaskDto:
      type: object
      properties:
        taskId:
          type: integer
          format: int32
          example: 12
        projectId:
          type: integer
          format: int32
          example: 5
        title:
          type: string
          maxLength: 50
          example: Nieuwe taak titel
        description:
          type: string
          maxLength: 400
          example: Nieuwe taak beschrijving
        totalNeeded:
          type: integer
          format: int32
          example: 3
      required:
        - taskId
        - projectId
        - title
        - description
        - totalNeeded

    GetSkillDto:
      description: een skill object
      type: object
      properties:
        skillId:
          type: integer
          format: int32
          example: 20
        name:
          type: string
          maxLength: 50
          example: adobe premiere pro
        isPending:
          type: boolean
          example: false
      required:
        - skillId
        - name
        - isPending

    GetRegistrationDto:
      type: object
      properties:
        taskId:
          type: integer
          format: int32
          example: 43
        reason:
          type: string
          example: Ik wil mij aanmelden omdat...
          description: Reden van aanmelding, gegeven door de student
          maxLength: 400
        accepted:
          type: boolean
        response:
          type: string
          example: Jij bent geschikt voor dit project
          description: Reactie van de opdrachtgever
        student:
          $ref: "#/components/schemas/StudentDto"
      required:
        - id
        - reason
        - student

    FileDto:
      type: object
      properties:
        path:
          type: string
          example: /image.png
          maxLength: 255

    UpdateStudentDto:
      type: object
      properties:
        username:
          type: string
          maxLength: 50
          example: mijn naam
        description:
          type: string
          maxLength: 400
          example: ik ben een student met een passie voor ...
        profilePicture:
          type: string
          format: binary
        cv:
          type: string
          format: binary

    StudentDto:
      type: object
      properties:
        userId:
          type: integer
          format: int32
          example: 312
        username:
          type: string
          maxLength: 50
          example: mijn naam
        description:
          type: string
          maxLength: 400
          example: ik ben een student met een passie voor ...
        profilePicture:
          $ref: "#/components/schemas/FileDto"
        email:
          type: string
          example: name@student.han.nl
        cv:
          $ref: "#/components/schemas/FileDto"
        skills:
          type: array
          items:
            type: object
            properties:
              skill:
                $ref: "#/components/schemas/GetSkillDto"
              description:
                type: string
                maxLength: 400
                example: ik ben goed in adobe premiere pro
      required:
        - username
        - description
        - profilePicture
        - cv
        - skills

    BusinessDto:
      type: object
      properties:
        businessId:
          type: integer
          format: int32
          example: 12
        name:
          type: string
          maxLength: 255
          example: mijn naam
        description:
          type: string
          maxLength: 4000
          example: Dit bedrijf is een bedrijf dat ...
        photo:
          $ref: "#/components/schemas/FileDto"
        location:
          type: string
          maxLength: 255
      required:
        - name
        - description
        - photo
        - location

    LinkDto:
      type: object
      properties:
        link:
          type: string
          example: http://localhost:5173/invite?code=BUY35IMO6MUBY54UY6M54HU6BN54IN6HN54I6NInyu45uni5n4i6nNIIUNI54UI6
        timestamp:
          type: string
          format: date-time
          example: 2024-12-20 13:45:35.254181
      required:
        - link
        - timestamp

    VerificationDto:
      type: object
      properties:
        type:
          $ref: "#/components/schemas/VerificationType"
        userId:
          type: integer
          format: int32
          example: 312
        businessId:
          type: integer
          format: int32
          example: null
      required:
        - type

    # V
    VerificationType:
      description: authorisatie type
      type: string
      enum: [none, student, supervisor, teacher, invalid]
      example: student

    LoginDto:
      type: object
      properties:
        username:
          type: string
          example: mijn naam
          maxLength: 50
        type:
          $ref: "#/components/schemas/VerificationType"
      required:
        - username
        - type

    IntArray:
      type: array
      items:
        type: integer
        format: int32
      example: [1, 2, 3]
